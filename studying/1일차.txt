ⓐ 실습 환경 구축
ⓑ 이클립스의 사용법
ⓒ 에러 발생 시 조치
ⓓ 주석처리 방법
ⓔ 자바 프로젝트 생성
ⓕ 프로젝트 백업방법
ⓗ 프로젝트 불러오기
ⓖ 프로젝트 이름 바꾸기
ⓗ 프로젝트 지우기
ⓘ 변수(Variable)에 관하여
ⓙ 연산자에 관하여



ⓐ 실습 환경 구축
	1. 자바 다운로드
		오라클 홈페이지 -> 메뉴 -> 다운로드 -> Java (JDK) for Developers
		-> JDK SE 8u241 -> JDK DOWNLOAD -> 동의 후 운영체제에 맞게 다운 //jdk는 jre를 포함
			//cmd -> java, javac 쳐서 없다고 나오면 설치가 안돼있는 상태 javac는 개발자 전용 물론 해당 폴더에서 쳐야함
			//번번히 cd로 폴더에 들어가서 하지 않기위해서는 환경 변수를 등록해 줘야함 ==> 시스템 속성 -> 고급 시스템 설정 -> 환경변수 -> 시스템 변수 새로만들기 -> 변수이름 : JAVA_HOME 변수값 : jdk 폴더 
				-> 시스템 변수 path 편집 -> 새로만들기 -> %JAVA_HOME%\bin
				//환경변수를 사용할 경우 양 끝에 %환경변수%
			//자바 버젼 확인 방법 : java -version //자바컴파일러 버젼 확인 방법 : javac -version

		자바 설치 : jre는 기본 지정해주는 폴더에, jdk는 사수 or 팀장이 지정해주는 폴더에 설치
		

	2. 이클립스 다운로드 //IDE : 통합개발환경
		이클립스 홈페이지 -> (우측 상단)다운로드 -> (GET Eclipse IDE) Download packages
			//이클립스 홈페이지 (Enabling Open Innovation & Collaboration | The Eclipse Foundation)
		->Eclipse IDE for Enterprise Java Developers -> 운영체제에 맞게 클릭 ->다운로드 누르지말고 zip파일을 직접 클릭(수동설치)
		
		이클립스 설치 : ★☆무조건 jdk jrd가 설치되어 있어야 함★☆
		eclipse.ini 파일 수정 -> Xms256m => Xms512m
		//우리는 C:\workspaceAVD\workspaceJava


	3. 파일질라 다운로드
		파일질라 홈페이지 -> Download FileZilla Client -> 기본형 다운
			//우리 호스트는 192.168.0.59 포트는 X
			//파일 -> 사이트 관리자 누르고 서버를 추가해놓으면 쉽게 이용 가능
 
	4. 노트패드++ 다운로드
		노트패드++홈페이지 -> 다운로드 -> 운영체제 맞게 설치

ⓑ 이클립스의 사용법
	우측상단 그림 중 Open Perspective가 자바환경, java EE 가 웹 관련
	
	Open Perspective -> Java 클릭 -> File -> new -> java project -> 이름만 하고 나머지 finish
	
	class 생성 방법 : src 우클릭 -> new -> class -> Name 적고 public static void main 체크 후 finish
	
	폰트 설정 방법 : window -> preferences -> general -> editores -> colors and fonts -> Text font -> edit
	
	워크스페이스로 이동 방법 : .java 우클릭 show in -> system explorer
	
	내용만 맞다면 임의로 .java 파일을 만들어서 cmd에서 javac 명령어로 사용 가능 => 정상적으로 되면 해당 폴더에 .class 파일 생성 ★☆이것의 의미는 이클립스로만 해야할 필요는 없다는 말임

	해당 폴더를 보는방법 : Window -> show view -> navigator //src는 소스
	
	\n은 줄바꿈 == println
	
	Ctrl + F11 은 RUN
	
	Ctrl + Alt + 아래키 는 현재 커서에 있는 줄을 아래에 복사
	
	다른 사람에게 파일을 보낼? .matadate 는 보내지 않는다. 이건 그냥 설정
	
	이클립스 단축기 변경 방법 : window -> preferences -> general -> keys
	
	★자바 소스파일 입력시 UTF-8을 기본값으로 하는 방법 : window = > preferences -> general -> Content Types -> Text -> Java Source File 클릭 -> Default encoding 칸에 UTF-8 입력 후 update
		인코딩 보는 방법 바꾸기 window -> preferences -> general -> Workspace -> encoding을 변경한다.

ⓒ 에러 발생 시 조치
	1. 에러 메시지를 잘 읽고 해당 부분의 코드를 살펴본다.
		이상이 없으면 해당 코드의 주위(윗줄과 아랫줄)도 함께 살펴본다.
	2. 그래도 이상이 없으면 에러 메시지는 잊어버리고 기본적인 부분을 재확인한다. 대부분의 에러는 사소한 것인 경우가 많다. (ex: 대소문자 구분, 띄어쓰기 등)
	3. 의심이 가는 부분을 주석처리 하거나 따로 때어내서 테스트 한다.

ⓓ 주석처리 방법
	//한줄 주석
		Ctrl + /
		다시 Ctrl + / 클릭 시 주석 해제
				여러줄 선택 Ctrl + /
				
	/* 여러중 주석 */
		Ctrl + Shift + /
		풀때는 : Ctrl + Shift + \
	/**api 주석*/

ⓔ 자바 프로젝트 생성
	file -> new -> java project
		JRE 에서 첫번째 체크는 프레임워크할때 배우고
			두번째 체크는 무조건 이걸로만 할거다! 라는 느낌
		//생성 후 JRE System Library가 생기는데 이것들 덕분에 자바 언어 사용가능
			//인스톨된 jre 관리 : window -> preferences -> java - > installed JREs
			//개발자는 jre가 아닌 jdk를 사용해야함 따라서 edit 누르고 디렉토리와 이름을 수정
			
	src 우클릭 -> new -> class -> void main 체크
		//class 이름의 첫글자는 무조건 대문자

ⓕ 프로젝트 백업방법
	자바 프로젝트 우클릭 -> export -> general -> archive file -> 디렉토리 설정 후 finish
	
ⓗ 프로젝트 불러오기
	file -> import -> general -> Existing Projects into Workspace -> Select archive file 체크(워크스테이션에 없을경우) -> 해당 파일(zip파일 가능)선택 후 finish
	file -> import -> general -> Existing Projects into Workspace -> Select root directory 체크(워크스테이션에 폴더가 그대로 있는경우) -> 해당폴더 선택 후 finish

ⓖ 프로젝트 이름 바꾸기
	자바 프로젝트 우클릭 -> refactor -> rename

ⓗ 프로젝트 지우기
	프로젝트 우클릭 -> delete -> 1. Delete project contents on dist 체크 시(해당 워크스페이스에도 지워짐)
							2. 체크 해제 시(해당 워크스페이스에는 남아있고 이크립스에서만 지워짐)
								-> 2번일 시 같은 프로젝트 이름으로 재 생성하면 워크스페이스에 있던 프로젝트를 불러옴

ⓘ 변수(Variable)에 관하여
	변수란? ==> 단 하나의 값을 저장할 수 있는 메모리 공간
		하나의 변수에 단 하나의 값만 저장가능
	변수 선언 방법 ==> 변수타입 변수이름 ex) int year
		같은 변수이름으로 두번 이상의 선언은 불가능!
		변수명은 어떤거든 가능하지만 예약어로는 불가능
	변수의 명명 규칙!
		1. 대소문자가 구분되며 길이에 제한이 없다.
			-- true와 True는 서로 다른 것으로 간주된다.
		2. 예약어를 사용해서는 안 된다.
			-- true 는 예약어라서 사용할 수 없지만, True는 가능하다.
		3. 숫자로 시작해서는 안 된다.
			-- top10은 허용하지만, 7up은 허용하지 않는다.
		4. 특수문자는 '_'와 '$' 만을 허용한다.
			-- $harp는 허용되지만, $#arp는 허용되지 않는다.
	보라색 글자는 예약어, 노란색 글자는 변수명
	= 을 기준으로 오른쪽은 R벨류, 왼쪽은 L벨류 => R 벨류를 L 벨류로 대입한다는 의미
	
	클래스 명명 규칙!
		1. 클래스 이름의 첫 글자는 항상 대문자로 한다.
			-- 변수와 메서드의 이름의 첫 글자는 항상 소문자로 한다.
		2. 여러 단어로 이루어진 이름은 단어의 첫 글자를 대문자로 한다.
			-- lastIndexOf, StringBuffer   //낙타 표기법
					//last_index_of : 파스칼 표기법 => 안드로이드에서 자주 봄
		3. 상수(절대 변하지 않는 수)의 이름은 모두 대문자로 한다. 여러 단어로 이루어진 경우 '_'로 구분한다.
			-- PI, MAX_NUMBER
			
	변수의 타입
		값의 종류
			1. 문자
			2. 숫자
				- 정수
				- 실수
	
	기본형과 참조형
		기본형(primitive type)
			- 논리형(boolean) : true와 false 중 하나를 값으로 갖으며, 조건식과 논리적 계산에 사용된다.
			- 문자형(char) : 문자를 저장하는데 사용되며, 변수 당 하나의 문자만 저장할 수 있다.
			- 정수형(byte, short, int, long) : 정수 값을 저장하는 데 사용된다. 주로 int, long을 사용한다.
			- 실수형(float, double) : 실수를 저장하는데 사용되며, 주로 double이 사용된다.
			기본형은 계산을 위한 실제 값을 저장한다.
		
		참조형(reference type)
			- 객체의 주소를 저장한다. 8개의 기본형을 제외한 나머지 타입
			
	표현 범위
		크기    1			2		4		8
			boolean  - char  - int   - long
			byte	 - short - float - double
	
	//원래 표현범위를 초과하면 에러가 나오지만 (변수타입)값; 이렇게 하면 되면서 반댓쪽 값부터 다시 루프한다. byte는 -128~127까지 표현가능
		-> byte bNum = 128;   에러  byte bNum = (byte)128;   -128
	
	변수 선언 중 특이한 방법
		long num = 숫자L; 숫자 끝에 L을 붙여야함
		float fnum = 실수f; 실수 끝에 f를 붙여야함
	
ⓙ 연산자에 관하여
	'+' 는  더하기 연산자 => 숫자의 산술, 문자의 연결
		숫자 + 숫자 = 숫자
		숫자 + 글자 = 글자
		글자 + 글자 = 글자
		글자 + 숫자 = 글자
			ex) "나의 나이는 " + age + 1 + " 입니다" => 나의 나이는 251 입니다
			ex) "나의 나이는 " + (age+1) + " 입니다" => 나의 나이는 26 입니다
			ex) age + 1 + " 입니다"			   => 26 입니다
			
			